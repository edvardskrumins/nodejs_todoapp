const request = require("supertest");
const { app } = require("../server");
const { Todo } = require("../models/todo");
const expect = require("chai").expect;

const todos = [
  {
    text: "todo 1"
  },
  {
    text: "todo 2"
  },
  {
    text: "todo 3"
  },
  {
    text: "todo 4"
  },
  {
    text: "todo 5",
    completed: true
  }
];

beforeEach(done => {
  Todo.deleteMany({})
    .then(() => {
      return Todo.insertMany(todos);
    })
    .then(() => done());
});

describe("POST Todos", () => {
  it("should create a todo", done => {
    const text = "Feed the cat";

    request(app)
      .post("/todos")
      .send({
        text
      })
      .expect(200)
      .expect(res => {
        expect(res.body.text).to.equal(text);
      })
      .end((err, res) => {
        if (err) {
          return done(err);
        }

        Todo.find()
          .then(todos => {
            expect(todos.length).to.equal(6);
            expect(todos[5].text).to.equal(text);
            done();
          })
          .catch(err => done(err));
      });
  });

  it("should not create todo with invalid data", done => {
    request(app)
      .post("/todos")
      .send({})
      .expect(400)
      .end((err, res) => {
        if (err) {
          return done(err);
        }
        done();
      });
  });
});

describe("GET todos", () => {
  it("should get all todos", done => {
    request(app)
      .get("/todos")
      .expect(200)
      .end((err, res) => {
        if (err) {
          return done(err);
        }
        expect(res.body.todos.length).to.equal(5);
        done();
      });
  });
});
